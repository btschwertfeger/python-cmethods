# -*- coding: utf-8 -*-
# Copyright (C) 2023 Benjamin Thomas Schwertfeger
# GitHub: https://github.com/btschwertfeger
#
# Workflow that gets triggered, when a release was created in the
# GitHub UI. This enables the upload of the python-cmethods package
# for the latest tag to PyPI.
#

name: PyPI Production Release

on:
  release:
    types: [created]

jobs:
  ##    Run pre-commit - just to make sure that the code is still
  ##    in the proper format
  ##
  Pre-Commit:
    uses: ./.github/workflows/_pre_commit.yml

  ##    Build the package - for all Python versions
  ##
  Build:
    uses: ./.github/workflows/_build.yml
    needs: [Pre-Commit]
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        python-version: ["3.8", "3.9", "3.10", "3.11"]
    with:
      os: ${{ matrix.os }}
      python-version: ${{ matrix.python-version }}

  ##    Build the documentation
  ##
  Build-Doc:
    needs: [Pre-Commit]
    uses: ./.github/workflows/_build_doc.yml
    with:
      os: ubuntu-latest
      python-version: "3.11"

  ##    Run the unit tests for Python 3.8 until 3.11
  ##
  Test:
    needs: [Build]
    uses: ./.github/workflows/_test.yml
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ["3.8", "3.9", "3.10", "3.11"]
    with:
      os: ${{ matrix.os }}
      python-version: ${{ matrix.python-version }}

  ##    Upload the python-cmethods to Test PyPI
  ##
  UploadTestPyPI:
    needs: [Test]
    name: Upload the current release to Test PyPI
    uses: ./.github/workflows/_pypi_publish.yml
    with:
      REPOSITORY_URL: https://test.pypi.org/legacy/
    secrets:
      API_TOKEN: ${{ secrets.TEST_PYPI_API_TOKEN }}

  ##    Upload the python-cmethods to PyPI
  ##
  UploadPyPI:
    needs: [Test]
    name: Upload the current release to PyPI
    uses: ./.github/workflows/_pypi_publish.yml
    with:
      REPOSITORY_URL: https://upload.pypi.org/legacy/
    secrets:
      API_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
